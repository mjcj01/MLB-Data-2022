opp_pitcher = starting_pitcher_game_log$PlayerName)) %>%
glm(runs ~ opp_pitcher, family = poisson(link = "log"), data =.)
poisson_2022_team_runs <- predict(poisson_2022_team,
data.frame(team = team, opponent = opponent), type = "response")
poisson_2022_opp_runs <- predict(poisson_2022_opp,
data.frame(team = team, opponent = opponent), type = "response")
poisson_2022_team_pitcher_runs <- predict(poisson_2022_team_pitcher,
data.frame(team_pitcher = team_pitcher), type = "response")
poisson_2022_opp_pitcher_runs <- predict(poisson_2022_opp_pitcher,
data.frame(opp_pitcher = opp_pitcher), type = "response")
team_overall <- (poisson_2022_opp_pitcher_runs * 0.5) + (poisson_2022_team_runs * 0.5)
opp_overall <- (poisson_2022_team_pitcher_runs * 0.5) + (poisson_2022_opp_runs * 0.5)
dpois(0:20, team_overall) %o% dpois(0:20, opp_overall)
}
game_predict <- function(team, opponent, team_pitcher, opp_pitcher) {
game <- sim(team, opponent, team_pitcher, opp_pitcher)
game_frame <- data.frame(sum(game[lower.tri(game)]), sum(game[upper.tri(game)]), sum(diag(game)))
colnames(game_frame) <- c(team, opponent, "Extra Innings")
game_frame
}
game_predict(team, opponent, team_pitcher, opp_pitcher)
}
simulate_game_both_pitchers("PHI","MIL","Aaron Nola","Adrian Houser")
run_distribution_graph <- function(team, opponent, team_pitcher, opp_pitcher) {
df_2022 <- filter(df1, Year == 2022)
poisson_2022_team <- rbind(
data.frame(runs = df_2022$R,
team = df_2022$Tm,
opponent = df_2022$Opp)) %>%
glm(runs ~ team + opponent, family = poisson(link = "log"), data =.)
poisson_2022_opp <- rbind(
data.frame(runs = df_2022$RA,
team = df_2022$Tm,
opponent = df_2022$Opp)) %>%
glm(runs ~ team + opponent, family = poisson(link = "log"), data =.)
poisson_2022_team_pitcher <- rbind(
data.frame(runs = starting_pitcher_game_log$R,
team_pitcher = starting_pitcher_game_log$PlayerName)) %>%
glm(runs ~ team_pitcher, family = poisson(link = "log"), data =.)
poisson_2022_opp_pitcher <- rbind(
data.frame(runs = starting_pitcher_game_log$R,
opp_pitcher = starting_pitcher_game_log$PlayerName)) %>%
glm(runs ~ opp_pitcher, family = poisson(link = "log"), data =.)
poisson_2022_team_runs <- predict(poisson_2022_team,
data.frame(team = team, opponent = opponent), type = "response")
poisson_2022_opp_runs <- predict(poisson_2022_opp,
data.frame(team = team, opponent = opponent), type = "response")
poisson_2022_team_pitcher_runs <- predict(poisson_2022_team_pitcher,
data.frame(team_pitcher = team_pitcher), type = "response")
poisson_2022_opp_pitcher_runs <- predict(poisson_2022_opp_pitcher,
data.frame(opp_pitcher = opp_pitcher), type = "response")
team_overall <- (poisson_2022_opp_pitcher_runs * 0.5) + (poisson_2022_team_runs * 0.5)
opp_overall <- (poisson_2022_team_pitcher_runs * 0.5) + (poisson_2022_opp_runs * 0.5)
df <- as.data.frame(dpois(0:20, team_overall) %o% dpois(0:20, opp_overall))
df_2 <- data.frame(sum(df[(col(df)-20) == row(df)]),
sum(df[(col(df)-19) == row(df)]),
sum(df[(col(df)-18) == row(df)]),
sum(df[(col(df)-17) == row(df)]),
sum(df[(col(df)-16) == row(df)]),
sum(df[(col(df)-15) == row(df)]),
sum(df[(col(df)-14) == row(df)]),
sum(df[(col(df)-13) == row(df)]),
sum(df[(col(df)-12) == row(df)]),
sum(df[(col(df)-11) == row(df)]),
sum(df[(col(df)-10) == row(df)]),
sum(df[(col(df)-9) == row(df)]),
sum(df[(col(df)-8) == row(df)]),
sum(df[(col(df)-7) == row(df)]),
sum(df[(col(df)-6) == row(df)]),
sum(df[(col(df)-5) == row(df)]),
sum(df[(col(df)-4) == row(df)]),
sum(df[(col(df)-3) == row(df)]),
sum(df[(col(df)-2) == row(df)]),
sum(df[(col(df)-1) == row(df)]),
sum(df[(col(df)-0) == row(df)]),
sum(df[(col(df)+1) == row(df)]),
sum(df[(col(df)+2) == row(df)]),
sum(df[(col(df)+3) == row(df)]),
sum(df[(col(df)+4) == row(df)]),
sum(df[(col(df)+5) == row(df)]),
sum(df[(col(df)+6) == row(df)]),
sum(df[(col(df)+7) == row(df)]),
sum(df[(col(df)+8) == row(df)]),
sum(df[(col(df)+9) == row(df)]),
sum(df[(col(df)+10) == row(df)]),
sum(df[(col(df)+11) == row(df)]),
sum(df[(col(df)+12) == row(df)]),
sum(df[(col(df)+13) == row(df)]),
sum(df[(col(df)+14) == row(df)]),
sum(df[(col(df)+15) == row(df)]),
sum(df[(col(df)+16) == row(df)]),
sum(df[(col(df)+17) == row(df)]),
sum(df[(col(df)+18) == row(df)]),
sum(df[(col(df)+19) == row(df)]),
sum(df[(col(df)+20) == row(df)]))
colnames(df_2) <- c(-20:20)
df_2 <- t(df_2)
colnames(df_2) <- c("RunProbability")
df_2 <- data.frame(df_2)
df_3 <- simulate_game_both_pitchers(team, opponent, team_pitcher, opp_pitcher)
ggplot(df_2, aes(x = c(-20:20))) +
geom_col(aes(y = RunProbability)) +
xlim(-5,5) +
ylim(0,0.2) +
labs(caption = "X-Axis represents the amount of runs the Phillies will win/lose by.") +
ggtitle(paste(team, "vs.", opponent)) +
theme_fivethirtyeight()
}
run_distribution_graph("PHI","MIL","Aaron Nola","Adrian Houser")
library(ggthemes)
run_distribution_graph("PHI","MIL","Aaron Nola","Adrian Houser")
library(tidyverse)
library(baseballr)
library(ggthemes)
playoff_teams_2021 <- c("TB","BOS","NYY","CHW","HOU","TOR")
View(df1)
projected_playoff_teams_2022 <- c("MIN","NYY","HOU","TOR","TBR","BOS","NYM","MIL","LAD","STL","SDP","SFG")
playoff_teams_2021 <- c("TBR","BOS","NYY","CHW","HOU","TOR","ATL","MIL","STL","SFG","LAD","CIN")
playoff_teams_2020 <- c("MIA","TOR","NYY","CHC","CHW","CLE","ATL","MIN","OAK","SDP","TBR","LAD")
playoff_teams_2019 <- c("NYY","TBR","MIN","HOU","OAK","CLE","ATL","WSN","STL","MIL","LAD","NYM")
library(forecast)
install.packages("forecast")
library(forecast)
autoplot(mdeaths)
?autoplot
?forecast
df1 %>%
filter(Tm == "PHI" & Year == 2022)
df1 %>%
filter(Tm == "PHI" & Year == 2022) %>%
forcast()
df1 %>%
filter(Tm == "PHI" & Year == 2022) %>%
forecast()
df1 %>%
filter(Tm == "PHI" & Year == 2022) %>%
forecast(h = 108)
df1 %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far)
forecast()
df1 %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
forecast(h = 108)
df1 <- forecast_data
forecast_data <- df1
forecast_data$Gm <- ts(forecast_data$Gm)
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
forecast(h = 108)
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
forecast()
forecast_data$wins_so_far <- ts(forecast_data$wins_so_far)
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
forecast()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
forecast(h = 108)
?auto.arima
# Convert as time series
airTS = ts(airquality)
# Plot multivariate ts
plot(airTS[,1:4])
# Run auto.arima on a single ts
arima_fit = auto.arima(airTS[,3])
# Forecast for the next 10 time units
arima_forecast = forecast(arima_fit, h = 10)
# Plot forecasts
plot(arima_forecast)
View(airquality)
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
ts() %>%
forecast(h = 108)
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
ts() %>%
plot(forecast(h = 108))
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far) %>%
ts() %>%
forecast(h = 108) %>%
plot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
plot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
plot([,1])
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
auto.arima([,3])
forecast(h = 108) %>%
autoplot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
autoplot()
forecast_data <- df1
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
autoplot()
View(airTS)
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast([,3]h = 108) %>%
autoplot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
autoplot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
autoplot() %>%
View()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
View()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
plot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
plot()
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
View(as.data.frame())
forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts() %>%
forecast(h = 108) %>%
View()
.[["forecast"]][["wins_so_far"]][["model"]][["fit"]][["fail"]]
?forecast()
forecast_data1 <- forecast_data %>%
filter(Tm == "PHI" & Year == 2022) %>%
select(Gm, wins_so_far, Tm, Year) %>%
ts()
arima_fit <- auto.arima(forecast_data1[,3])
arima_fit <- auto.arima(forecast_data1[,3]) %>%
forecast(h = 108) %>%
plot()
arima_fit <- auto.arima(forecast_data1[,2]) %>%
forecast(h = 108) %>%
plot()
filter(df1, Tm == "PHI" & Year == c(2021:2022))
warnings()
filter(df1, Tm == "PHI" & Year == c(2021,2022))
filter(df1, Tm == "PHI" & Year == c(2021))
filter(df1, Tm == "PHI" & Year == c(2019,2021))
playerid_cutdown
View(as.data.frame(playerid_cutdown))
View(rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021)))
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
df_1 <- filter(df1, Tm == Tm & Year = 2022)
ggplot(data = df_1, aes(x = Gm, y = wins_so_far)) +
geom_line
}
ggplot(data = df_1, aes(x = Gm, y = wins_so_far)) +
geom_line()
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
df_1 <- filter(df1, Tm == Tm & Year = 2022)
ggplot(data = df_1, aes(x = Gm, y = wins_so_far)) +
geom_line()
}
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
df_1 <- filter(df1, Tm == Tm & Year == 2022)
ggplot(data = df_1, aes(x = Gm, y = wins_so_far)) +
geom_line()
}
wins_plot("PHI")
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
df_1 <- filter(df1, Tm == Tm & Year == 2022)
ggplot(data = df_1, aes(x = Gm, y = wins_so_far)) +
geom_point()
}
wins_plot("PHI")
View(filter(df1, Tm == "PHI" & Year == 2022))
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Tm & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point()
}
wins_plot("PHI")
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Tm & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point()
}
wins_plot("PHI")
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Tm & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_smooth()
}
wins_plot("PHI")
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Tm & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point()
}
wins_plot("PHI")
filter(df1, Tm == "PHI" & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point()
filter(df1, Tm == "PHI" & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_line()
wins_plot <- function(Tm) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == "PHI" & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point()
}
wins_plot("PHI")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point()
}
wins_plot("PHI")
wins_plot("BAL")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons$wins_so_far)
}
wins_plot("BAL")
rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021)
rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons, formula = Gm ~ wins_so_far)
}
wins_plot("BAL")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons)
}
wins_plot("BAL")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons, formula = y ~ x)
}
wins_plot("BAL")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons, formula = y ~ x)
}
wins_plot("NYY")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(method = lm, x = previous_seasons$Gm, y = previous_seasons$wins_so_far)
}
wins_plot("NYY")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(aes(x = previous_seasons$Gm, y = previous_seasons$wins_so_far))
}
wins_plot("NYY")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons, aes(x = Gm, y = wins_so_far))
}
wins_plot("NYY")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(data = previous_seasons, aes(x = Gm, y = wins_so_far), formula = x ~ y)
}
wins_plot("NYY")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth()
}
wins_plot("NYY")
wins_plot <- function(Team) {
previous_seasons <- rbind(filter(df1, Year == 2017),filter(df1, Year == 2018),
filter(df1, Year == 2019),filter(df1, Year == 2020),
filter(df1, Year == 2021))
filter(df1, Tm == Team & Year == 2022) %>%
ggplot(aes(x = Gm, y = wins_so_far)) +
geom_point() +
geom_smooth(aes(y = previous_seasons$wins_so_far))
}
wins_plot("NYY")
